version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: py-demo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: miniblog
      MYSQL_USER: miniblog
      MYSQL_PASSWORD: miniblog123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - py-demo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5



  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: py-demo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - py-demo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 用户服务
  user-service:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.user
    container_name: py-demo-user-service
    environment:
      - DATABASE_URL=mysql+pymysql://miniblog:miniblog123@mysql:3306/miniblog
      - REDIS_URL_USER=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
      - JWT_ALGORITHM=HS256
      - FLASK_ENV=development
      - FLASK_CONFIG=development
      - SERVICE_NAME_USER=user-service
      - POSTS_PER_PAGE=10
      - USER_SERVICE_TIMEOUT=10
    ports:
      - "5001:5001"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - py-demo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/v1/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 博客服务
  blog-service:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.blog
    container_name: py-demo-blog-service
    environment:
      - DATABASE_URL=mysql+pymysql://miniblog:miniblog123@mysql:3306/miniblog
      - REDIS_URL_BLOG=redis://redis:6379/1
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
      - JWT_ALGORITHM=HS256
      - FLASK_ENV=development
      - FLASK_CONFIG=development
      - SERVICE_NAME_BLOG=blog-service
      - POSTS_PER_PAGE=10
      - MAX_POSTS_PER_PAGE=50
      - CACHE_DEFAULT_TIMEOUT=300
      - USER_SERVICE_URL=http://user-service:5001
    ports:
      - "5002:5002"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - py-demo-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  redis_data:

networks:
  py-demo-network:
    driver: bridge